name: Deploy Graph

on:
  pull_request:
    types: [opened, ready_for_review, synchronize]
  push:
    branches: [master]

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      bridgeworld: ${{ steps.filter.outputs.bridgeworld }}
      bridgeworld_approvals: ${{ steps.filter.outputs.bridgeworld_approvals }}
      bridgeworld_recruits: ${{ steps.filter.outputs.bridgeworld_recruits }}
      magic_stats: ${{ steps.filter.outputs.magic_stats }}
      magicswap_exchange: ${{ steps.filter.outputs.magicswap_exchange }}
      migration: ${{ steps.filter.outputs.migration }}
      smolverse: ${{ steps.filter.outputs.smolverse }}
      smolverse_inventory: ${{ steps.filter.outputs.smolverse_inventory }}
      smol_racing: ${{ steps.filter.outputs.smol_racing }}
      smoloween: ${{ steps.filter.outputs.smoloween }}
      smolidays: ${{ steps.filter.outputs.smolidays }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          bridgeworld:
            - "packages/**"
            - "subgraphs/bridgeworld/**"
          bridgeworld_approvals:
            - "packages/**"
            - "subgraphs/bridgeworld-approvals/**"
          bridgeworld_recruits:
            - "packages/**"
            - "subgraphs/bridgeworld-recruits/**"
          magic_stats:
            - "packages/**"
            - "subgraphs/magic-stats/**"
          magicswap_exchange:
            - "packages/**"
            - "subgraphs/magicswap-exchange/**"
          migration:
            - "packages/**"
            - "subgraphs/migration/**"
          smolverse:
            - "packages/**"
            - "subgraphs/smolverse/**"
          smolverse_inventory:
            - "packages/**"
            - "subgraphs/smolverse-inventory/**"
          smol_racing:
            - "packages/**"
            - "subgraphs/smol-racing/**"
          smoloween:
            - "packages/**"
            - "subgraphs/smoloween/**"
          smolidays:
            - "packages/**"
            - "subgraphs/smolidays/**"

  bridgeworld:
    name: Bridgeworld Subgraph
    if: ${{ needs.changes.outputs.bridgeworld == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/bridgeworld
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  bridgeworld_approvals:
    name: Bridgeworld Approvals Subgraph
    if: ${{ needs.changes.outputs.bridgeworld_approvals == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/bridgeworld-approvals
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  bridgeworld_recruits:
    name: Bridgeworld Recruits Subgraph
    if: ${{ needs.changes.outputs.bridgeworld_recruits == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/bridgeworld-recruits
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  magic_stats:
    name: Magic Stats Subgraph
    if: ${{ needs.changes.outputs.magic_stats == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/magic-stats
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  magicswap_exchange:
    name: MagicSwap Exchange Subgraph
    if: ${{ needs.changes.outputs.magicswap_exchange == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/magicswap-exchange
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  migration:
    name: Migration Subgraph
    if: ${{ needs.changes.outputs.migration == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/migration
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for PROD
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Authenticate
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  smolverse:
    name: Smolverse Subgraph
    if: ${{ needs.changes.outputs.smolverse == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smolverse
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  smolverse_inventory:
    name: Smolverse Inventory Subgraph
    if: ${{ needs.changes.outputs.smolverse_inventory == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smolverse-inventory
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  smol_racing:
    name: Smol Racing Subgraph
    if: ${{ needs.changes.outputs.smol_racing == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smol-racing
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  smoloween:
    name: Smoloween Subgraph
    if: ${{ needs.changes.outputs.smoloween == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smoloween
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod
  smolidays:
    name: Smolidays Subgraph
    if: ${{ needs.changes.outputs.smolidays == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smolidays
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod
