name: Deploy Graph

on:
  pull_request:
    types: [opened, ready_for_review, synchronize]
  push:
    branches: [master]

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      bridgeworld: ${{ steps.filter.outputs.bridgeworld }}
      bridgeworld_stats: ${{ steps.filter.outputs.bridgeworld_stats }}
      magic_stats: ${{ steps.filter.outputs.magic_stats }}
      magicswap_exchange: ${{ steps.filter.outputs.magicswap_exchange }}
      migration: ${{ steps.filter.outputs.migration }}
      seed_of_life: ${{ steps.filter.outputs.seed_of_life }}
      seed_of_life_stats: ${{ steps.filter.outputs.seed_of_life_stats }}
      smolverse: ${{ steps.filter.outputs.smolverse }}
      snapshot: ${{ steps.filter.outputs.snapshot }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          bridgeworld:
            - "packages/**"
            - "subgraphs/bridgeworld/**"
          bridgeworld_stats:
            - "packages/**"
            - "subgraphs/bridgeworld-stats/**"
          magic_stats:
            - "packages/**"
            - "subgraphs/magic-stats/**"
          magicswap_exchange:
            - "packages/**"
            - "subgraphs/magicswap-exchange/**"
          migration:
            - "packages/**"
            - "subgraphs/migration/**"
          seed_of_life:
            - "packages/**"
            - "subgraphs/seed-of-life/**"
          seed_of_life_stats:
            - "packages/**"
            - "subgraphs/seed-of-life-stats/**"
          smolverse:
            - "packages/**"
            - "subgraphs/smolverse/**"
          snapshot:
            - "packages/**"
            - "subgraphs/snapshot/**"

  bridgeworld:
    name: Bridgeworld Subgraph
    if: ${{ needs.changes.outputs.bridgeworld == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/bridgeworld
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  bridgeworld_stats:
    name: Bridgeworld Stats Subgraph
    if: ${{ needs.changes.outputs.bridgeworld_stats == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/bridgeworld-stats
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  magic_stats:
    name: Magic Stats Subgraph
    if: ${{ needs.changes.outputs.magic_stats == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/magic-stats
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  magicswap_exchange:
    name: MagicSwap Exchange Subgraph
    if: ${{ needs.changes.outputs.magicswap_exchange == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/magicswap-exchange
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  migration:
    name: Migration Subgraph
    if: ${{ needs.changes.outputs.migration == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/migration
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for PROD
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Authenticate
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  seed_of_life:
    name: Seed of Life Subgraph
    if: ${{ needs.changes.outputs.seed_of_life == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/seed-of-life
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  seed_of_life_stats:
    name: Seed of Life Stats Subgraph
    if: ${{ needs.changes.outputs.seed_of_life_stats == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/seed-of-life-stats
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  smolverse:
    name: Smolverse Subgraph
    if: ${{ needs.changes.outputs.smolverse == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/smolverse
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn prepare:dev
      - name: Prepare for PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Test
        run: yarn test
      - name: Authenticate
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to DEV
        if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
        run: yarn deploy:dev
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod

  snapshot:
    name: Snapshot Subgraph
    if: ${{ needs.changes.outputs.snapshot == 'true' }}
    needs: changes
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./subgraphs/snapshot
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Prepare for PROD
        run: yarn prepare:prod
      - name: Generate code
        run: yarn codegen
      - name: Authenticate
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GRAPH_ACCESS_TOKEN: ${{ secrets.GRAPH_ACCESS_TOKEN }}
        run: yarn graph auth --product hosted-service "$GRAPH_ACCESS_TOKEN"
      - name: Deploy to PROD
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: yarn deploy:prod
