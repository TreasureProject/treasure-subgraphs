enum Status {
  Started
  Ready
  Finished
}

enum ItemType {
  ERC20
  ERC1155
}

enum ItemEffect {
  Burn
  MoveToTreasury
  Custom
}

type CorruptionBuilding @entity {
  id: ID!

  address: Bytes!
  ratePerSecond: BigInt!
  generatedCorruptionCap: BigInt!
  recipes: [CorruptionRemovalRecipe!]!
}

type CorruptionRemovalRecipe @entity {
  id: ID!

  corruptionRemoved: BigInt!
  items: [CorruptionRemovalRecipeItem!]! @derivedFrom(field: "recipe")
}

type CorruptionRemovalRecipeItem @entity {
  id: ID!

  recipe: CorruptionRemovalRecipe!

  address: Bytes!
  type: ItemType!
  effect: ItemEffect!
  effectChance: BigInt!
  itemId: BigInt!
  amount: BigInt!
  customHandler: Bytes
  customRequirementData: Bytes
}

type CorruptionRemoval @entity {
  id: ID!

  user: User!
  building: CorruptionBuilding!
  recipe: CorruptionRemovalRecipe!
  status: Status!
  corruptionRemoved: BigInt!
  prismMinted: BigInt
}

"Tracks related Randomizer commits"
type Seeded @entity {
  id: ID!

  "Requests related to this commit"
  requests: [CorruptionRemoval!]!
}

type User @entity {
  id: ID!

  corruptionRemovals: [CorruptionRemoval!]! @derivedFrom(field: "user")
}
