enum CollectionName {
  SmolBrainsV1
  SmolBrains
  SmolBodies
  SmolBrainsPets
  SmolBodiesPets
  SmolLand
  SmolCars
  Swolercycles
  SmolRacingTrophies
  SmolTreasures
  Other
}

enum StakingContractName {
  BattleFlyFlywheel
  Farm
  Gym
  Quests
  Racing
  Rocket
  School
}

type User @entity(immutable: true) {
  id: Bytes!

  "Tokens owned by this user"
  tokens: [UserToken!]! @derivedFrom(field: "owner")
}

type Collection @entity(immutable: true) {
  id: Bytes!

  "Collection name"
  name: CollectionName!

  "Tokens within this collection"
  tokens: [Token!]! @derivedFrom(field: "collection")
}

type StakingContract @entity(immutable: true) {
  id: Bytes!

  "Staking contract name"
  name: StakingContractName!

  "User tokens staked in this contract"
  tokens: [UserToken!]! @derivedFrom(field: "stakedIn")
}

type Token @entity {
  id: Bytes!

  "Token collection"
  collection: Collection!

  "Token ID"
  tokenId: Int!

  "Users that own this token"
  owners: [UserToken!]! @derivedFrom(field: "token")
}

type UserToken @entity {
  id: Bytes!

  "Token"
  token: Token!

  "Token collection, exposed for querying purposes"
  collection: Collection!

  "Token ID, exposed for querying purposes"
  tokenId: Int!

  "User that owns this token"
  owner: User!

  "Quantity owned"
  quantity: Int!

  "Contract where this token is staked, if any"
  stakedIn: StakingContract

  "Time when token was staked, if applicable"
  stakedTime: BigInt
}
