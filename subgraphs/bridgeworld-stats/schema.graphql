enum Interval {
  Hourly
  Daily
  Weekly
  Monthly
  Yearly
  AllTime
}

enum LegionGeneration {
  Genesis
  Auxiliary
  Recruit
}

enum LegionRarity {
  Legendary
  Rare
  Special
  Uncommon
  Common
  None
}

enum LegionClass {
  Recruit
  Siege
  Fighter
  Assassin
  Ranger
  Spellcaster
  Riverman
  Numeraire
  AllClass
  Origin
}

enum CraftingDifficulty {
  Prism
  HarvesterPart
  Extractor
}

enum QuestingDifficulty {
  Easy
  Medium
  Hard
}

type Legion @entity {
  id: ID!
  tokenId: BigInt!
  generation: LegionGeneration!
  rarity: LegionRarity!
  legionClass: LegionClass!
  name: String!
}

type _Craft @entity {
  id: ID!
  difficulty: CraftingDifficulty!
}

type _Quest @entity {
  id: ID!
  difficulty: QuestingDifficulty!
}

type ConsumableStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  tokenId: BigInt!
  name: String!

  craftingStat: CraftingStat

  "Number of this Consumable type earned in Crafts"
  craftingEarned: Int!
}

type TreasureStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  tokenId: BigInt!
  name: String!
  tier: Int!

  craftingStat: CraftingStat
  questingStat: QuestingStat

  "Number of this Treasure type used in Crafts"
  craftingUsed: Int!

  "Number of this Treasure type broken in Crafts"
  craftingBroken: Int!

  "Number of this Treasure type earned in Quests"
  questingEarned: Int!
}

type LegionStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  generation: LegionGeneration!
  rarity: LegionRarity!
  legionClass: LegionClass
  name: String!

  craftingStat: CraftingStat
  pilgrimageStat: PilgrimageStat
  questingStat: QuestingStat
  summoningStat: SummoningStat

  "Number of Crafts started by this Legion type"
  craftsStarted: Int!

  "Number of Crafts finished by this Legion type"
  craftsFinished: Int!

  "Number of successful Crafts by this Legion type"
  craftsSucceeded: Int!

  "Number of failed Crafts by this Legion type"
  craftsFailed: Int!

  "Number of Pilgrimages resulting in this Legion type"
  pilgrimagesResulted: Int!

  "Number of Quests started by this Legion type"
  questsStarted: Int!

  "Number of Quests finished by this Legion type"
  questsFinished: Int!

  "Number of Prism Shards earned by this Legion type while questing"
  questingShardsEarned: Int!

  "Number of Essences of Starlight earned by this Legion type while questing"
  questingStarlightEarned: Int!

  "Number of Universal Locks earned by this Legion type while questing"
  questingUniversalLocksEarned: Int!

  "Number of treasures earned by this Legion type while questing"
  questingTreasuresEarned: Int!

  "$MAGIC spent on Summons by this Legion type"
  summoningMagicSpent: BigInt!

  "Number of Summons started by this Legion type"
  summonsStarted: Int!

  "Number of Summons finished by this Legion type"
  summonsFinished: Int!

  "Number of Summons that have resulted in the creation of this Legion type"
  summonedCount: Int!
}

type UserStat @entity {
  id: ID!
  address: String!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  magicDepositCount: Int!
  magicWithdrawCount: Int!
  magicHarvestCount: Int!
  magicDeposited: BigInt!
  magicWithdrawn: BigInt!
  magicHarvested: BigInt!
  craftsStarted: Int!
  craftsFinished: Int!
  craftsSucceeded: Int!
  craftsFailed: Int!
  brokenTreasuresCount: Int!
  pilgrimagesStarted: Int!
  pilgrimagesFinished: Int!
  questsStarted: Int!
  questsFinished: Int!
  questingShardsEarned: Int!
  questingStarlightEarned: Int!
  questingUniversalLocksEarned: Int!
  questingTreasuresEarned: Int!
  summonsStarted: Int!
  summonsFinished: Int!
}

type AtlasMineLockStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  atlasMineStat: AtlasMineStat!
  lock: Int!

  magicDepositCount: Int!
  magicDeposited: BigInt!
}

type AtlasMineStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!
  magicDepositCount: Int!
  magicWithdrawCount: Int!
  magicHarvestCount: Int!
  magicDeposited: BigInt!
  magicWithdrawn: BigInt!
  magicHarvested: BigInt!

  "Number of unique addresses actively staking throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have staked at any point"
  allAddressesCount: Int!

  lockStats: [AtlasMineLockStat!]! @derivedFrom(field: "atlasMineStat")
}

type CraftingDifficultyStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  difficulty: CraftingDifficulty!
  craftingStat: CraftingStat!

  magicConsumed: BigInt!
  magicReturned: BigInt!
  craftsStarted: Int!
  craftsFinished: Int!
  craftsSucceeded: Int!
  craftsFailed: Int!
  brokenTreasuresCount: Int!
}

type CraftingStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  magicConsumed: BigInt!
  magicReturned: BigInt!
  craftsStarted: Int!
  craftsFinished: Int!
  craftsSucceeded: Int!
  craftsFailed: Int!
  brokenTreasuresCount: Int!

  "Number of unique addresses actively crafting throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have crafted at any point"
  allAddressesCount: Int!

  difficultyStats: [CraftingDifficultyStat!]!
    @derivedFrom(field: "craftingStat")
  legionStats: [LegionStat!]! @derivedFrom(field: "craftingStat")
  treasureStats: [TreasureStat!]! @derivedFrom(field: "craftingStat")
}

type PilgrimageStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  pilgrimagesStarted: Int!
  pilgrimagesFinished: Int!

  "Number of unique addresses actively pilgrimaging throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have pilgrimaged at any point"
  allAddressesCount: Int!

  legionStats: [LegionStat!]! @derivedFrom(field: "pilgrimageStat")
}

type QuestingDifficultyStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt

  difficulty: QuestingDifficulty!
  questingStat: QuestingStat!

  questsStarted: Int!
  questsFinished: Int!
  questingShardsEarned: Int!
  questingStarlightEarned: Int!
  questingUniversalLocksEarned: Int!
  questingTreasuresEarned: Int!
}

type QuestingStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  questsStarted: Int!
  questsFinished: Int!
  questingShardsEarned: Int!
  questingStarlightEarned: Int!
  questingUniversalLocksEarned: Int!
  questingTreasuresEarned: Int!

  "Number of unique addresses actively questing throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have quested at any point"
  allAddressesCount: Int!

  difficultyStats: [QuestingDifficultyStat!]!
    @derivedFrom(field: "questingStat")
  legionStats: [LegionStat!]! @derivedFrom(field: "questingStat")
  treasureStats: [TreasureStat!]! @derivedFrom(field: "questingStat")
}

type SummoningStat @entity {
  id: ID!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  "$MAGIC spent on Summons"
  magicSpent: BigInt!

  "Number of Summons started by all Legions"
  summonsStarted: Int!

  "Number of Summons finished by all Legions"
  summonsFinished: Int!

  "Number of unique addresses actively summoning throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have summoned at any point"
  allAddressesCount: Int!

  legionStats: [LegionStat!]! @derivedFrom(field: "summoningStat")
}
