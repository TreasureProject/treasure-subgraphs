enum Interval {
  Hourly
  Daily
  Weekly
  Monthly
  Yearly
  AllTime
}

enum LegionGeneration {
  Genesis
  Auxiliary
  Recruit
}

enum LegionRarity {
  Legendary
  Rare
  Special
  Uncommon
  Common
  None
}

type User @entity {
  id: ID!
  magicDepositCount: Int!
  magicWithdrawCount: Int!
  magicHarvestCount: Int!
  magicDeposited: BigInt!
  magicWithdrawn: BigInt!
  magicHarvested: BigInt!
  craftsStarted: Int!
  craftsFinished: Int!
  craftsSucceeded: Int!
  craftsFailed: Int!
  brokenTreasuresCount: Int!
  summonsStarted: Int!
  summonsFinished: Int!
}

type Legion @entity {
  id: ID!
  tokenId: BigInt!
  generation: LegionGeneration!
  rarity: LegionRarity!
  name: String!
}

type LegionStat @entity {
  id: ID!
  startTimestamp: BigInt
  endTimestamp: BigInt
  generation: LegionGeneration!
  rarity: LegionRarity!
  name: String!
  
  summoningStat: SummoningStat
  craftingStat: CraftingStat

  "$MAGIC spent on Summons by this Legion type"
  summoningMagicSpent: BigInt!

  "Number of Summons started by this Legion type"
  summonsStarted: Int!

  "Number of Summons finished by this Legion type"
  summonsFinished: Int!

  "Number of Summons that have resulted in the creation of this Legion type"
  summonedCount: Int!
}

type AtlasMineLockStat @entity {
  id: ID!
  startTimestamp: BigInt
  endTimestamp: BigInt
  atlasMineStat: AtlasMineStat!
  lock: Int!
  magicDepositCount: Int!
  magicDeposited: BigInt!
}

type AtlasMineStat @entity {
  id: ID!

  "Internal for tracking active unique addresses"
  _activeAddresses: [String!]!

  "Internal for tracking all unique addresses"
  _allAddresses: [String!]!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!
  magicDepositCount: Int!
  magicWithdrawCount: Int!
  magicHarvestCount: Int!
  magicDeposited: BigInt!
  magicWithdrawn: BigInt!
  magicHarvested: BigInt!
  
  "Number of unique addresses actively staking throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have staked at any point"
  allAddressesCount: Int!

  lockStats: [AtlasMineLockStat!]! @derivedFrom(field: "atlasMineStat")
}

type Pilgrimage @entity {
  id: ID!

  current: Int!
  total: Int!
}

type SummoningStat @entity {
  id: ID!

  "Internal for tracking active unique addresses"
  _activeAddresses: [String!]!

  "Internal for tracking all unique addresses"
  _allAddresses: [String!]!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  "$MAGIC spent on Summons"
  magicSpent: BigInt!

  "Number of Summons started by all Legions"
  summonsStarted: Int!

  "Number of Summons finished by all Legions"
  summonsFinished: Int!

  "Number of unique addresses actively summoning throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have summoned at any point"
  allAddressesCount: Int!

  legionStats: [LegionStat!]! @derivedFrom(field: "summoningStat")
}

type CraftingStat @entity {
  id: ID!

  "Internal for tracking active unique addresses"
  _activeAddresses: [String!]!

  "Internal for tracking all unique addresses"
  _allAddresses: [String!]!

  startTimestamp: BigInt
  endTimestamp: BigInt
  interval: Interval!

  magicConsumed: BigInt!
  magicReturned: BigInt!
  craftsStarted: Int!
  craftsFinished: Int!
  craftsSucceeded: Int!
  craftsFailed: Int!
  brokenTreasuresCount: Int!

  "Number of unique addresses actively crafting throughout time period"
  activeAddressesCount: Int!

  "Number of unique addresses that have crafted at any point"
  allAddressesCount: Int!

  legionStats: [LegionStat!]! @derivedFrom(field: "craftingStat")
}
