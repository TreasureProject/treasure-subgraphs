enum Status {
  Active
  Inactive
  Sold
}

type Listing @entity {
  id: ID!

  # "Track originally listed quantity, needed when staking Treasures"
  # _listedQuantity: BigInt!

  blockTimestamp: BigInt!
  buyer: User
  contract: Bytes!
  # collection: Collection!
  # collectionName: String!
  expires: BigInt!

  # "Used to support multiple filters with metadata attributes"
  # filters: [String!]

  # nicePrice: String
  pricePerItem: BigInt!
  quantity: BigInt!
  seller: User!
  status: Status!
  token: Token!
  # tokenName: String
  # totalPrice: String

  # Sold listing
  transactionLink: String
}

type Token @entity {
  id: ID!

  contract: Bytes!
  listings: [Listing!] @derivedFrom(field: "token")
  owners: [UserToken!]! @derivedFrom(field: "token")
  tokenId: BigInt!
}

type User @entity {
  id: ID!

  listings: [Listing!]! @derivedFrom(field: "seller")
  purchases: [Listing!]! @derivedFrom(field: "buyer")
  tokens: [UserToken!]! @derivedFrom(field: "user")
}

type UserToken @entity {
  id: ID!

  quantity: Int!
  token: Token!
  user: User!
}
