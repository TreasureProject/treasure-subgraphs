[
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "previousOwner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Paused",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "_treasureId",
        "type": "uint256"
      },
      {
        "components": [
          {
            "internalType": "enum TreasureCategory",
            "name": "category",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "north",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "east",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "south",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "west",
            "type": "uint8"
          }
        ],
        "indexed": false,
        "internalType": "struct CardInfo",
        "name": "_cardInfo",
        "type": "tuple"
      }
    ],
    "name": "TreasureCardInfoSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "Unpaused",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "addAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "_addresses",
        "type": "address[]"
      }
    ],
    "name": "addAdmins",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256[]",
        "name": "_treasureIds",
        "type": "uint256[]"
      },
      {
        "components": [
          {
            "internalType": "enum TreasureCategory",
            "name": "category",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "north",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "east",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "south",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "west",
            "type": "uint8"
          }
        ],
        "internalType": "struct CardInfo[]",
        "name": "_cardInfo",
        "type": "tuple[]"
      }
    ],
    "name": "addTreasureCardInfo",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "advancedQuesting",
    "outputs": [
      {
        "internalType": "contract IAdvancedQuesting",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_treasureId",
        "type": "uint256"
      }
    ],
    "name": "affinityForTreasure",
    "outputs": [
      {
        "internalType": "enum TreasureCategory",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "areContractsSet",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "baseTreasureRarityPerTier",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "enum LegionClass",
        "name": "",
        "type": "uint8"
      },
      {
        "internalType": "enum TreasureCategory",
        "name": "",
        "type": "uint8"
      }
    ],
    "name": "classToTreasureCategoryToHasAffinity",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_randomNumber",
        "type": "uint256"
      },
      {
        "internalType": "enum LegionClass",
        "name": "_legionClass",
        "type": "uint8"
      },
      {
        "components": [
          {
            "internalType": "uint8",
            "name": "x",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "y",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "treasureId",
            "type": "uint256"
          }
        ],
        "internalType": "struct UserMove[]",
        "name": "_userMoves",
        "type": "tuple[]"
      }
    ],
    "name": "generateBoardAndPlayGame",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint8",
            "name": "numberOfFlippedCards",
            "type": "uint8"
          },
          {
            "internalType": "uint8",
            "name": "numberOfCorruptedCardsLeft",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "playerWon",
            "type": "bool"
          }
        ],
        "internalType": "struct GameOutcome",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "initialize",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "isAdmin",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numberOfFlippedCardsToWin",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "paused",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "randomizer",
    "outputs": [
      {
        "internalType": "contract IRandomizer",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_address",
        "type": "address"
      }
    ],
    "name": "removeAdmin",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address[]",
        "name": "_addresses",
        "type": "address[]"
      }
    ],
    "name": "removeAdmins",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "renounceOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_advancedQuestingAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_treasureMetadataStoreAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_randomizerAddress",
        "type": "address"
      }
    ],
    "name": "setContracts",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bool",
        "name": "_shouldPause",
        "type": "bool"
      }
    ],
    "name": "setPause",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "newOwner",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "treasureIdToCardInfo",
    "outputs": [
      {
        "internalType": "enum TreasureCategory",
        "name": "category",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "north",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "east",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "south",
        "type": "uint8"
      },
      {
        "internalType": "uint8",
        "name": "west",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "treasureMetadataStore",
    "outputs": [
      {
        "internalType": "contract ITreasureMetadataStore",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
