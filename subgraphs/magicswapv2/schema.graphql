enum NftType {
  ERC721
  ERC1155
}

enum TransactionType {
  Swap
  Deposit
  Withdrawal
}

type Collection @entity {
  id: Bytes!

  type: NftType!

  vaultCollections: [VaultCollection!]! @derivedFrom(field: "collection")
}

type VaultCollection @entity {
  id: Bytes!

  vault: Token!
  collection: Collection!
  tokenIds: [BigInt!]
}

type Token @entity {
  id: Bytes!

  name: String!
  symbol: String!
  totalSupply: BigInt!
  decimals: BigInt!
  decimalDivisor: BigDecimal!

  vaultCollections: [VaultCollection!]! @derivedFrom(field: "vault")
  vaultReserveItems: [VaultReserveItem!]! @derivedFrom(field: "vault")

  basePairs: [Pair!]! @derivedFrom(field: "token0")
  quotePairs: [Pair!]! @derivedFrom(field: "token1")

  volume: BigDecimal!
  txCount: BigInt!
}

type VaultReserveItem @entity {
  id: Bytes!

  vault: Token!
  collection: Collection!
  tokenId: BigInt!
  amount: Int!
}

type Pair @entity {
  id: Bytes!

  token0: Token!
  token1: Token!
  reserve0: BigDecimal!
  reserve1: BigDecimal!
  totalSupply: BigInt!

  volume0: BigDecimal!
  volume1: BigDecimal!
  txCount: BigInt!

  transactions: [Transaction!]! @derivedFrom(field: "pair")
}

type User @entity(immutable: true) {
  id: Bytes!

  transactions: [Transaction!]! @derivedFrom(field: "user")
}

type Transaction @entity(immutable: true) {
  id: Bytes!

  hash: Bytes!
  timestamp: BigInt!
  type: TransactionType!
  user: User!

  pair: Pair!

  amount0: BigDecimal!
  amount1: BigDecimal!
  isAmount1Out: Boolean!

  tokenIds0: [Int!]
  tokenIds1: [Int!]
}
