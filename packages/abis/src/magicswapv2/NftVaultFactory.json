{
  "abi": [
    {
      "inputs": [],
      "name": "VaultAlreadyDeployed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "VaultDoesNotExist",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "contract INftVault",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum INftVault.NftType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowAllIds",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct INftVault.CollectionData[]",
          "name": "collections",
          "type": "tuple[]"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "VaultCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum INftVault.NftType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowAllIds",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct INftVault.CollectionData[]",
          "name": "_collections",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isSoulbound",
          "type": "bool"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract INftVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum INftVault.NftType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowAllIds",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct INftVault.CollectionData[]",
          "name": "_collections",
          "type": "tuple[]"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPermissionedVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVaults",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "getPermissionedVaultAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPermissionedVaultLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum INftVault.NftType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowAllIds",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct INftVault.CollectionData[]",
          "name": "_collections",
          "type": "tuple[]"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "contract INftVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_i",
          "type": "uint256"
        }
      ],
      "name": "getVaultAt",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "enum INftVault.NftType",
              "name": "nftType",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "allowAllIds",
              "type": "bool"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct INftVault.CollectionData[]",
          "name": "_collections",
          "type": "tuple[]"
        }
      ],
      "name": "hashVault",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "isPermissionedVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "isVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "vaultHashMap",
      "outputs": [
        {
          "internalType": "contract INftVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INftVault",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vaultIdMap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "329:3923:90:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "329:3923:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1637:121;;;:::i;:::-;;;160:25:93;;;148:2;133:18;1637:121:90;;;;;;;;1801:133;;;;;;:::i;:::-;;:::i;:::-;;;749:14:93;;742:22;724:41;;712:2;697:18;1801:133:90;584:187:93;1146:109:90;;;;;;:::i;:::-;;:::i;569:49::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;569:49:90;;;;;;-1:-1:-1;;;;;1144:32:93;;;1126:51;;1114:2;1099:18;569:49:90;961:222:93;1469:125:90;;;;;;:::i;:::-;;:::i;862:101::-;;;;;;:::i;:::-;;:::i;1006:97::-;;;:::i;715:104::-;;;:::i;:::-;;;;;;;:::i;2474:156::-;;;;;;:::i;:::-;;:::i;2673:1577::-;;;;;;:::i;:::-;;:::i;624:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1977:236;;;;;;:::i;:::-;;:::i;2256:175::-;;;;;;:::i;:::-;;:::i;1298:128::-;;;:::i;1637:121::-;1698:7;1724:27;:18;:25;:27::i;:::-;1717:34;;1637:121;:::o;1801:133::-;1869:4;1892:35;:18;1920:6;1892:27;:35::i;:::-;1885:42;1801:133;-1:-1:-1;;1801:133:90:o;1146:109::-;1202:4;1225:23;1202:4;1241:6;1225:15;:23::i;1469:125::-;1536:7;1562:25;:18;1584:2;1562:21;:25::i;862:101::-;917:7;943:13;917:7;953:2;943:9;:13::i;1006:97::-;1055:7;1081:15;:6;:13;:15::i;715:104::-;762:16;797:15;:6;:13;:15::i;2474:156::-;2562:7;2609:12;2598:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;2588:35;;;;;;2581:42;;2474:156;;;:::o;2673:1577::-;2825:15;;-1:-1:-1;;;;;2876:20:90;;;:37;;;;;2901:12;2900:13;2876:37;2852:61;;2924:17;2944:23;2954:12;2944:9;:23::i;:::-;2995;;;;:12;:23;;;;;;-1:-1:-1;;;;;2995:23:90;;-1:-1:-1;2924:43:90;-1:-1:-1;3116:28:90;;;;;:48;;;3148:16;3116:48;3112:83;;;3173:22;;-1:-1:-1;;;3173:22:90;;;;;;;;;;;3112:83;3206:15;3231:18;3259:20;3294:16;3290:503;;;3366:15;:6;:13;:15::i;:::-;3356:25;;3432:18;:7;:16;:18::i;:::-;3402:49;;;;;;;;:::i;:::-;;;;;;;;;;;;;3395:56;;3502:18;:7;:16;:18::i;:::-;3474:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;3465:56;;3290:503;;;3590:27;:18;:25;:27::i;:::-;3580:37;;3681:18;:7;:16;:18::i;:::-;3638:62;;;;;;;;:::i;:::-;;;;;;;;;;;;;3631:69;;3763:18;:7;:16;:18::i;:::-;3723:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;3714:68;;3290:503;3842:4;3848:6;3856;3864:12;3829:48;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3889:24:90;;-1:-1:-1;;;3889:24:90;;3803:76;;-1:-1:-1;;;;;;3889:10:90;;;;;:24;;3900:12;;3889:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3928:16;3924:228;;;3960:26;:6;3979:5;3960:10;:26::i;:::-;-1:-1:-1;4000:23:90;;;;:12;:23;;;;;;;;:31;;-1:-1:-1;;;;;;4000:31:90;-1:-1:-1;;;;;4000:31:90;;;;;;;;4045:17;;:10;:17;;;;;:27;;;3924:228;;;4103:38;:18;4134:5;4103:22;:38::i;:::-;;3924:228;4167:76;4180:4;4186:6;4194:5;4201:7;4210:12;4224:10;4236:6;4167:76;;;;;;;;;;;;:::i;:::-;;;;;;;;2842:1408;;;;;2673:1577;;;;;:::o;1977:236::-;2064:15;2099:12;:37;2112:23;2122:12;2112:9;:23::i;:::-;2099:37;;;;;;;;;;;-1:-1:-1;2099:37:90;;-1:-1:-1;;;;;2099:37:90;;-1:-1:-1;2099:37:90;2146:60;;2187:19;;-1:-1:-1;;;2187:19:90;;;;;;;;;;;2146:60;1977:236;;;:::o;2256:175::-;2341:4;;2372:12;2341:4;2385:23;2395:12;2385:9;:23::i;:::-;2372:37;;;;;;;;;;;-1:-1:-1;2372:37:90;;-1:-1:-1;;;;;2372:37:90;2364:60;;;2256:175;-1:-1:-1;;2256:175:90:o;1298:128::-;1357:16;1392:27;:18;:25;:27::i;9098:115:46:-;9161:7;9187:19;9195:3;4537:18;;4455:107;8852:165;-1:-1:-1;;;;;8985:23:46;;8932:4;4343:19;;;:12;;;:19;;;;;;:24;;8955:55;8948:62;8852:165;-1:-1:-1;;;8852:165:46:o;9555:156::-;9629:7;9679:22;9683:3;9695:5;9679:3;:22::i;10251:300::-;10314:16;10342:22;10367:19;10375:3;10367:7;:19::i;415:696:40:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:40;-1:-1:-1;572:41:40;-1:-1:-1;733:28:40;;;749:2;733:28;788:280;-1:-1:-1;;819:5:40;-1:-1:-1;;;953:2:40;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:40;788:280;1032:21;-1:-1:-1;1088:6:40;415:696;-1:-1:-1;;;415:696:40:o;8297:150:46:-;8367:4;8390:50;8395:3;-1:-1:-1;;;;;8415:23:46;;8390:4;:50::i;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;5562:109::-;5618:16;5653:3;:11;;5646:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5562:109;;;:::o;9889:890:44:-;9942:7;;-1:-1:-1;;;10017:15:44;;10013:99;;-1:-1:-1;;;10052:15:44;;;-1:-1:-1;10095:2:44;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:44;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:44;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:44;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:44;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:44;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:44:o;2206:404:46:-;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:46;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:46;2581:12;;-1:-1:-1;;;;;;;;:::o;196:131:93:-;-1:-1:-1;;;;;271:31:93;;261:42;;251:70;;317:1;314;307:12;251:70;196:131;:::o;332:247::-;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;776:180::-;835:6;888:2;876:9;867:7;863:23;859:32;856:52;;;904:1;901;894:12;856:52;-1:-1:-1;927:23:93;;776:180;-1:-1:-1;776:180:93:o;1581:658::-;1752:2;1804:21;;;1874:13;;1777:18;;;1896:22;;;1723:4;;1752:2;1975:15;;;;1949:2;1934:18;;;1723:4;2018:195;2032:6;2029:1;2026:13;2018:195;;;2097:13;;-1:-1:-1;;;;;2093:39:93;2081:52;;2188:15;;;;2153:12;;;;2129:1;2047:9;2018:195;;;-1:-1:-1;2230:3:93;;1581:658;-1:-1:-1;;;;;;1581:658:93:o;2244:127::-;2305:10;2300:3;2296:20;2293:1;2286:31;2336:4;2333:1;2326:15;2360:4;2357:1;2350:15;2376:253;2448:2;2442:9;2490:4;2478:17;;2525:18;2510:34;;2546:22;;;2507:62;2504:88;;;2572:18;;:::i;:::-;2608:2;2601:22;2376:253;:::o;2634:275::-;2705:2;2699:9;2770:2;2751:13;;-1:-1:-1;;2747:27:93;2735:40;;2805:18;2790:34;;2826:22;;;2787:62;2784:88;;;2852:18;;:::i;:::-;2888:2;2881:22;2634:275;;-1:-1:-1;2634:275:93:o;2914:197::-;2988:4;3021:18;3013:6;3010:30;3007:56;;;3043:18;;:::i;:::-;-1:-1:-1;3088:1:93;3084:14;3100:4;3080:25;;2914:197::o;3116:160::-;3181:20;;3237:13;;3230:21;3220:32;;3210:60;;3266:1;3263;3256:12;3281:2700;3349:5;3402:3;3395:4;3387:6;3383:17;3379:27;3369:55;;3420:1;3417;3410:12;3369:55;3456:6;3443:20;3482:4;3506:74;3522:57;3576:2;3522:57;:::i;:::-;3506:74;:::i;:::-;3614:15;;;3676:1;3716:11;;;3704:24;;3700:33;;;3645:12;;;;3602:3;3745:15;;;3742:35;;;3773:1;3770;3763:12;3742:35;3809:2;3801:6;3797:15;3821:2131;3837:6;3832:3;3829:15;3821:2131;;;3923:3;3910:17;3950:18;4000:2;3987:11;3984:19;3981:109;;;4044:1;4073:2;4069;4062:14;3981:109;4113:24;;;;4160:4;4188:12;;;-1:-1:-1;;4184:26:93;4180:35;-1:-1:-1;4177:125:93;;;4256:1;4285:2;4281;4274:14;4177:125;4328:22;;:::i;:::-;4399:2;4395;4391:11;4378:25;4416:33;4441:7;4416:33;:::i;:::-;4462:22;;4507:2;4550:11;;;4537:25;4597:1;4585:14;;4575:115;;4642:1;4672:3;4667;4660:16;4575:115;4710:14;;;4703:31;4758:2;4796:29;4812:12;;;4796:29;:::i;:::-;4780:14;;;4773:53;4868:11;;;4855:25;;4896:16;;;4893:109;;;4954:1;4984:3;4979;4972:16;4893:109;5034:8;5030:2;5026:17;5015:28;;5084:3;5079:2;5074:3;5070:12;5066:22;5056:123;;5131:1;5120:12;;5161:3;5156;5149:16;5056:123;5225:2;5220:3;5216:12;5203:26;5192:37;;5255:75;5271:58;5325:3;5271:58;:::i;5255:75::-;5374:18;;;5470:12;;;5461:22;;5457:31;;;5414:14;;;;-1:-1:-1;5504:17:93;;;5501:110;;;5563:1;5593:3;5588;5581:16;5501:110;5637:12;;;;5662:174;5680:8;5673:5;5670:19;5662:174;;;5762:19;;5748:34;;5701:14;;;;5808;;;;5662:174;;;5856:15;;;5849:30;-1:-1:-1;5892:18:93;;-1:-1:-1;;;5930:12:93;;;;3854;;3821:2131;;;-1:-1:-1;5970:5:93;;3281:2700;-1:-1:-1;;;;;;;3281:2700:93:o;5986:395::-;6103:6;6156:2;6144:9;6135:7;6131:23;6127:32;6124:52;;;6172:1;6169;6162:12;6124:52;6212:9;6199:23;6245:18;6237:6;6234:30;6231:50;;;6277:1;6274;6267:12;6231:50;6300:75;6367:7;6358:6;6347:9;6343:22;6300:75;:::i;:::-;6290:85;5986:395;-1:-1:-1;;;;5986:395:93:o;6568:598::-;6700:6;6708;6716;6769:2;6757:9;6748:7;6744:23;6740:32;6737:52;;;6785:1;6782;6775:12;6737:52;6825:9;6812:23;6858:18;6850:6;6847:30;6844:50;;;6890:1;6887;6880:12;6844:50;6913:75;6980:7;6971:6;6960:9;6956:22;6913:75;:::i;:::-;6903:85;;;7038:2;7027:9;7023:18;7010:32;7051:31;7076:5;7051:31;:::i;:::-;7101:5;-1:-1:-1;7125:35:93;7156:2;7141:18;;7125:35;:::i;:::-;7115:45;;6568:598;;;;;:::o;7442:1665::-;7509:3;7547:5;7541:12;7574:6;7569:3;7562:19;7600:4;7629:2;7624:3;7620:12;7613:19;;7654:3;7694:6;7691:1;7687:14;7682:3;7678:24;7736:2;7729:5;7725:14;7757:1;7767:1314;7781:6;7778:1;7775:13;7767:1314;;;7842:16;;;7830:29;;7882:13;;7992:9;;-1:-1:-1;;;;;7988:35:93;7975:49;;8063:11;;;8057:18;7918:4;;7949:13;;;;8115:1;8098:19;;8088:170;;8168:10;8163:3;8159:20;8156:1;8149:31;8207:4;8204:1;8197:15;8239:4;8236:1;8229:15;8088:170;8278:13;;;8271:35;8329:4;8388:11;;;8382:18;8375:26;8368:34;8353:13;;;8346:57;8426:4;8471:11;;;8465:18;8503:13;;;8496:25;;;;8582:21;;8616:24;;;;8705:23;;;;8672:3;8662:14;;;-1:-1:-1;;8766:209:93;8782:8;8777:3;8774:17;8766:209;;;8859:15;;8845:30;;8944:17;;;;8901:14;;;;8810:1;8801:11;;;;;8766:209;;;-1:-1:-1;;9059:12:93;;;;8996:5;-1:-1:-1;;9024:15:93;;;;7803:1;7796:9;7767:1314;;9112:341;9357:2;9346:9;9339:21;9320:4;9377:70;9443:2;9432:9;9428:18;9420:6;9377:70;:::i;9458:250::-;9543:1;9553:113;9567:6;9564:1;9561:13;9553:113;;;9643:11;;;9637:18;9624:11;;;9617:39;9589:2;9582:10;9553:113;;;-1:-1:-1;;9700:1:93;9682:16;;9675:27;9458:250::o;9713:434::-;-1:-1:-1;;;9960:3:93;9953:27;9935:3;10009:6;10003:13;10025:75;10093:6;10088:2;10083:3;10079:12;10072:4;10064:6;10060:17;10025:75;:::i;:::-;10120:16;;;;10138:2;10116:25;;9713:434;-1:-1:-1;;9713:434:93:o;10152:432::-;-1:-1:-1;;;10399:3:93;10392:25;10374:3;10446:6;10440:13;10462:75;10530:6;10525:2;10520:3;10516:12;10509:4;10501:6;10497:17;10462:75;:::i;:::-;10557:16;;;;10575:2;10553:25;;10152:432;-1:-1:-1;;10152:432:93:o;10589:447::-;10841:27;10836:3;10829:40;10811:3;10898:6;10892:13;10914:75;10982:6;10977:2;10972:3;10968:12;10961:4;10953:6;10949:17;10914:75;:::i;:::-;11009:16;;;;11027:2;11005:25;;10589:447;-1:-1:-1;;10589:447:93:o;11041:444::-;-1:-1:-1;;;11288:3:93;11281:37;11263:3;11347:6;11341:13;11363:75;11431:6;11426:2;11421:3;11417:12;11410:4;11402:6;11398:17;11363:75;:::i;:::-;11458:16;;;;11476:2;11454:25;;11041:444;-1:-1:-1;;11041:444:93:o;11490:271::-;11532:3;11570:5;11564:12;11597:6;11592:3;11585:19;11613:76;11682:6;11675:4;11670:3;11666:14;11659:4;11652:5;11648:16;11613:76;:::i;:::-;11743:2;11722:15;-1:-1:-1;;11718:29:93;11709:39;;;;11750:4;11705:50;;11490:271;-1:-1:-1;;11490:271:93:o;11766:563::-;12013:3;12002:9;11995:22;11976:4;12040:46;12081:3;12070:9;12066:19;12058:6;12040:46;:::i;:::-;12134:9;12126:6;12122:22;12117:2;12106:9;12102:18;12095:50;12162:33;12188:6;12180;12162:33;:::i;:::-;-1:-1:-1;;;;;12231:32:93;;;;12226:2;12211:18;;12204:60;-1:-1:-1;;12307:14:93;;12300:22;12295:2;12280:18;;;12273:50;12154:41;11766:563;-1:-1:-1;;11766:563:93:o;12334:1040::-;12806:3;12795:9;12788:22;12769:4;12833:46;12874:3;12863:9;12859:19;12851:6;12833:46;:::i;:::-;12927:9;12919:6;12915:22;12910:2;12899:9;12895:18;12888:50;12961:33;12987:6;12979;12961:33;:::i;:::-;-1:-1:-1;;;;;13068:15:93;;;13063:2;13048:18;;13041:43;13115:2;13100:18;;13093:34;;;13164:22;;;13158:3;13143:19;;13136:51;12947:47;;-1:-1:-1;13204:58:93;12947:47;13247:6;13204:58;:::i;:::-;13196:66;;13311:2;13303:6;13299:15;13293:3;13282:9;13278:19;13271:44;13364:2;13356:6;13352:15;13346:3;13335:9;13331:19;13324:44;;;12334:1040;;;;;;;;;;:::o;13511:127::-;13572:10;13567:3;13563:20;13560:1;13553:31;13603:4;13600:1;13593:15;13627:4;13624:1;13617:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createVault((address,uint8,bool,uint256[])[],address,bool)": "cf25a9d3",
    "exists((address,uint8,bool,uint256[])[])": "f68790c7",
    "getAllPermissionedVaults()": "f853ca3d",
    "getAllVaults()": "97331bf9",
    "getPermissionedVaultAt(uint256)": "77f7154b",
    "getPermissionedVaultLength()": "2c1067d8",
    "getVault((address,uint8,bool,uint256[])[])": "f3964551",
    "getVaultAt(uint256)": "7a98742d",
    "getVaultLength()": "812617c7",
    "hashVault((address,uint8,bool,uint256[])[])": "9ac24687",
    "isPermissionedVault(address)": "5c870c6d",
    "isVault(address)": "652b9b41",
    "vaultHashMap(bytes32)": "74449c60",
    "vaultIdMap(address)": "d126fc19"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VaultAlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"VaultDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"contract INftVault\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum INftVault.NftType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowAllIds\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct INftVault.CollectionData[]\",\"name\":\"collections\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"VaultCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum INftVault.NftType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowAllIds\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct INftVault.CollectionData[]\",\"name\":\"_collections\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isSoulbound\",\"type\":\"bool\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"contract INftVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum INftVault.NftType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowAllIds\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct INftVault.CollectionData[]\",\"name\":\"_collections\",\"type\":\"tuple[]\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPermissionedVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVaults\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"getPermissionedVaultAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPermissionedVaultLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum INftVault.NftType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowAllIds\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct INftVault.CollectionData[]\",\"name\":\"_collections\",\"type\":\"tuple[]\"}],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"contract INftVault\",\"name\":\"vault\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"getVaultAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"enum INftVault.NftType\",\"name\":\"nftType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"allowAllIds\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct INftVault.CollectionData[]\",\"name\":\"_collections\",\"type\":\"tuple[]\"}],\"name\":\"hashVault\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"isPermissionedVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"isVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"vaultHashMap\",\"outputs\":[{\"internalType\":\"contract INftVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INftVault\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultIdMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"VaultAlreadyDeployed()\":[{\"details\":\"Vault with identical configuration is already deployed\"}],\"VaultDoesNotExist()\":[{\"details\":\"Vault does not exist\"}]},\"events\":{\"VaultCreated(string,string,address,uint256,(address,uint8,bool,uint256[])[],address,address)\":{\"params\":{\"collections\":\"configuration used for vault creation\",\"creator\":\"address of vault creator\",\"name\":\"vault's name\",\"symbol\":\"vault's name\",\"vault\":\"vault's address as INftVault\",\"vaultId\":\"vault's index in `vaults` AddressSet\"}}},\"kind\":\"dev\",\"methods\":{\"createVault((address,uint8,bool,uint256[])[],address,bool)\":{\"details\":\"If vault already exists, function returned already deployed vault\",\"params\":{\"collections\":\"vault's config\",\"isSoulbound\":\"if true, Vault is soulbound and its ERC20 token can only be transfered        to `allowedContracts` managed by `owner`\",\"owner\":\"address of owner if vault is permissioned, otherwise address(0) and vault is permissionless\"},\"returns\":{\"vault\":\"address of (newly) deployed vault\"}},\"exists((address,uint8,bool,uint256[])[])\":{\"params\":{\"collections\":\"vault's config\"},\"returns\":{\"_0\":\"true if vault with given config exists\"}},\"getAllPermissionedVaults()\":{\"returns\":{\"_0\":\"all deployed permissioned vaults\"}},\"getAllVaults()\":{\"returns\":{\"_0\":\"all deployed vaults\"}},\"getPermissionedVaultAt(uint256)\":{\"params\":{\"i\":\"vaultId\"},\"returns\":{\"_0\":\"vault address\"}},\"getPermissionedVaultLength()\":{\"returns\":{\"_0\":\"length of permissioned vault's EnumerableSet\"}},\"getVault((address,uint8,bool,uint256[])[])\":{\"params\":{\"collections\":\"vault's config\"},\"returns\":{\"vault\":\"address\"}},\"getVaultAt(uint256)\":{\"params\":{\"i\":\"vaultId\"},\"returns\":{\"_0\":\"vault address\"}},\"getVaultLength()\":{\"returns\":{\"_0\":\"length of vault's EnumerableSet\"}},\"hashVault((address,uint8,bool,uint256[])[])\":{\"params\":{\"collections\":\"vault's config\"},\"returns\":{\"_0\":\"config hash\"}},\"isPermissionedVault(address)\":{\"params\":{\"vault\":\"address\"}},\"isVault(address)\":{\"params\":{\"vault\":\"address\"}}},\"stateVariables\":{\"vaultHashMap\":{\"params\":{\"hash\":\"vault's config hash\"},\"return\":\"address\",\"returns\":{\"_0\":\"address\"}}},\"version\":1},\"userdoc\":{\"events\":{\"VaultCreated(string,string,address,uint256,(address,uint8,bool,uint256[])[],address,address)\":{\"notice\":\"Emitted when new vault is deployed\"}},\"kind\":\"user\",\"methods\":{\"createVault((address,uint8,bool,uint256[])[],address,bool)\":{\"notice\":\"Create new vault\"},\"exists((address,uint8,bool,uint256[])[])\":{\"notice\":\"Returns true if vault with given config exists\"},\"getPermissionedVaultAt(uint256)\":{\"notice\":\"Get permissioned vault by its EnumerableSet vaultId\"},\"getVault((address,uint8,bool,uint256[])[])\":{\"notice\":\"Get vault by it's config\"},\"getVaultAt(uint256)\":{\"notice\":\"Get vault by its EnumerableSet vaultId\"},\"hashVault((address,uint8,bool,uint256[])[])\":{\"notice\":\"Get config hash\"},\"isPermissionedVault(address)\":{\"notice\":\"Returns true if permissioned vault has been deployed by factory\"},\"isVault(address)\":{\"notice\":\"Returns true if vault has been deployed by factory\"},\"vaultHashMap(bytes32)\":{\"notice\":\"Get vault by its config hash\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Vault/NftVaultFactory.sol\":\"NftVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x6adb35bab98e4b2aeafeba8d975dd22db19800b7bb15ec58e4fb78c837eeb054\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec44134e911aa2df880e1dc900b57e24b7f2cc4bf7f0c1dec6d1dbeef35f7e97\",\"dweb:/ipfs/QmZKWEGgkmMUyU1fMgu7dhUctXiaxLdCuv15cejsvhMoVn\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519\",\"dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a\",\"dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda\",\"dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x40b93a02e108e561af791d08d38d6d262c241f0778260b8c2afea9e7ef573d79\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93d75098b053f8e89f73a4880de1bb7ad97756a0cac82ac28d1be1825fc67060\",\"dweb:/ipfs/QmR4rpHv5y7AnjxxAQyjPdPHAhntvuAa8t3qosvbU3oLZ5\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da\",\"dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xca1b8408f5137ff7f73ade1d303a723a00c83067392d43f343628deb7c98d3b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5010f14b2d30cdaf813dab357250be63c250b11f79d4f9233887560ddd4d369\",\"dweb:/ipfs/QmetSh6t7179Hv2fXynrKpp5uN9b1uKw8MuYjPKnqiDpUY\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x636eab608b4563c01e88042aba9330e6fe69af2c567fe1adf4d85731974ac81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e35967fa779d58a99de2f6d7ac23ef489d09bc18a5668fd231753905e0a9f633\",\"dweb:/ipfs/QmWUSbnhG7z4fDUYMbCuyJ4nyhqKwzL2jbeFEnVLDxo6R6\"]},\"src/Vault/INftVault.sol\":{\"keccak256\":\"0xf1eb3938eb5c1fd02290505851b50a027293b1f19d325600a615d7952c85bcd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d85a8c8399b139af18f793d4c98a0d8edfc972bfa74e2463bed85ec4693ae954\",\"dweb:/ipfs/QmUnqFKkBQHmTm98hEJu5Z5YJtmZYrEfYja3Yh5dJwCgtQ\"]},\"src/Vault/INftVaultFactory.sol\":{\"keccak256\":\"0xc763960d1766106cdede3d8733db5f583bd6f2534844f53e108bda9b2f80e412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c33f5dbb7ab5df31b981c847c312edcdc4c1aa40f3d58095fb4acb3f6e26623\",\"dweb:/ipfs/QmRnmgWGTu5bnjV43fo51Yu6yeLPTQvKx1UE7afSnq3D6J\"]},\"src/Vault/NftVault.sol\":{\"keccak256\":\"0x817556d47270184c2f0976a2ce596fa49930bc0c83025a881e0152f007a2a1ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43380934cc88a8e6a576b9b50d2295952c7b15273ffc5212333e1c774da1e3aa\",\"dweb:/ipfs/QmTYEUe2dw2iLk7CqSFz3KoW6TKAFaFte6F8wvasEXRmfQ\"]},\"src/Vault/NftVaultFactory.sol\":{\"keccak256\":\"0xc64c027b7640300a8248fb00acfe2ff2de57172b0e192bf75002a01f1205a7b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ead4740df252e36c9fc96b2b03af8af6bbcdd09fcac93e28cea3a2d0b25044d\",\"dweb:/ipfs/QmegfqxSCCHH6LvS4kKH8hjwS54pTUVyLKwkAEQiDC8wLQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "VaultAlreadyDeployed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "VaultDoesNotExist"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "contract INftVault",
              "name": "vault",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "struct INftVault.CollectionData[]",
              "name": "collections",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum INftVault.NftType",
                  "name": "nftType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "allowAllIds",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VaultCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct INftVault.CollectionData[]",
              "name": "_collections",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum INftVault.NftType",
                  "name": "nftType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "allowAllIds",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isSoulbound",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createVault",
          "outputs": [
            {
              "internalType": "contract INftVault",
              "name": "vault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INftVault.CollectionData[]",
              "name": "_collections",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum INftVault.NftType",
                  "name": "nftType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "allowAllIds",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllPermissionedVaults",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllVaults",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_i",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPermissionedVaultAt",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPermissionedVaultLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INftVault.CollectionData[]",
              "name": "_collections",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum INftVault.NftType",
                  "name": "nftType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "allowAllIds",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVault",
          "outputs": [
            {
              "internalType": "contract INftVault",
              "name": "vault",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_i",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultAt",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getVaultLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct INftVault.CollectionData[]",
              "name": "_collections",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "enum INftVault.NftType",
                  "name": "nftType",
                  "type": "uint8"
                },
                {
                  "internalType": "bool",
                  "name": "allowAllIds",
                  "type": "bool"
                },
                {
                  "internalType": "uint256[]",
                  "name": "tokenIds",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "hashVault",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPermissionedVault",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_vault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVault",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultHashMap",
          "outputs": [
            {
              "internalType": "contract INftVault",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract INftVault",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultIdMap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createVault((address,uint8,bool,uint256[])[],address,bool)": {
            "details": "If vault already exists, function returned already deployed vault",
            "params": {
              "collections": "vault's config",
              "isSoulbound": "if true, Vault is soulbound and its ERC20 token can only be transfered        to `allowedContracts` managed by `owner`",
              "owner": "address of owner if vault is permissioned, otherwise address(0) and vault is permissionless"
            },
            "returns": {
              "vault": "address of (newly) deployed vault"
            }
          },
          "exists((address,uint8,bool,uint256[])[])": {
            "params": {
              "collections": "vault's config"
            },
            "returns": {
              "_0": "true if vault with given config exists"
            }
          },
          "getAllPermissionedVaults()": {
            "returns": {
              "_0": "all deployed permissioned vaults"
            }
          },
          "getAllVaults()": {
            "returns": {
              "_0": "all deployed vaults"
            }
          },
          "getPermissionedVaultAt(uint256)": {
            "params": {
              "i": "vaultId"
            },
            "returns": {
              "_0": "vault address"
            }
          },
          "getPermissionedVaultLength()": {
            "returns": {
              "_0": "length of permissioned vault's EnumerableSet"
            }
          },
          "getVault((address,uint8,bool,uint256[])[])": {
            "params": {
              "collections": "vault's config"
            },
            "returns": {
              "vault": "address"
            }
          },
          "getVaultAt(uint256)": {
            "params": {
              "i": "vaultId"
            },
            "returns": {
              "_0": "vault address"
            }
          },
          "getVaultLength()": {
            "returns": {
              "_0": "length of vault's EnumerableSet"
            }
          },
          "hashVault((address,uint8,bool,uint256[])[])": {
            "params": {
              "collections": "vault's config"
            },
            "returns": {
              "_0": "config hash"
            }
          },
          "isPermissionedVault(address)": {
            "params": {
              "vault": "address"
            }
          },
          "isVault(address)": {
            "params": {
              "vault": "address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createVault((address,uint8,bool,uint256[])[],address,bool)": {
            "notice": "Create new vault"
          },
          "exists((address,uint8,bool,uint256[])[])": {
            "notice": "Returns true if vault with given config exists"
          },
          "getPermissionedVaultAt(uint256)": {
            "notice": "Get permissioned vault by its EnumerableSet vaultId"
          },
          "getVault((address,uint8,bool,uint256[])[])": {
            "notice": "Get vault by it's config"
          },
          "getVaultAt(uint256)": {
            "notice": "Get vault by its EnumerableSet vaultId"
          },
          "hashVault((address,uint8,bool,uint256[])[])": {
            "notice": "Get config hash"
          },
          "isPermissionedVault(address)": {
            "notice": "Returns true if permissioned vault has been deployed by factory"
          },
          "isVault(address)": {
            "notice": "Returns true if vault has been deployed by factory"
          },
          "vaultHashMap(bytes32)": {
            "notice": "Get vault by its config hash"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Vault/NftVaultFactory.sol": "NftVaultFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x6adb35bab98e4b2aeafeba8d975dd22db19800b7bb15ec58e4fb78c837eeb054",
        "urls": [
          "bzz-raw://ec44134e911aa2df880e1dc900b57e24b7f2cc4bf7f0c1dec6d1dbeef35f7e97",
          "dweb:/ipfs/QmZKWEGgkmMUyU1fMgu7dhUctXiaxLdCuv15cejsvhMoVn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
        "keccak256": "0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3",
        "urls": [
          "bzz-raw://a74009db3c6fc8db851ba69ddb6795b5c1ef1120c5a00fd1a8dc3a717dd9d519",
          "dweb:/ipfs/QmZMk8Yh2X3gPS51ckUVLEXjZUhMSEeGApnA53WtjvLb9h"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
        "keccak256": "0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb",
        "urls": [
          "bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d",
          "dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x3270d2a7a042dda9cf85dddd16e6106c2c9ad784c0972315630b2a148215fa7d",
        "urls": [
          "bzz-raw://b394e20d57877a825c24c1841e219d6ab1e41decec060ea935422ac9b7a25f8a",
          "dweb:/ipfs/QmVTaGCMR4Gi9w1LUVVcjEJHrHF2qcr1avFkLtsLD6sEAr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x086fbe904291497e1532ef340f1bd589078f49e3d4d0bbfd88f5e02fb89261eb",
        "urls": [
          "bzz-raw://0df1e3e965b78a0d98dda2d1d6a6acde88f515b1d3a9ad02f505e93fa7babeda",
          "dweb:/ipfs/QmW4cSbGriRAj7XRZu6zSaqspe4eyYWkF7WfJbj3rmmLbk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x40b93a02e108e561af791d08d38d6d262c241f0778260b8c2afea9e7ef573d79",
        "urls": [
          "bzz-raw://93d75098b053f8e89f73a4880de1bb7ad97756a0cac82ac28d1be1825fc67060",
          "dweb:/ipfs/QmR4rpHv5y7AnjxxAQyjPdPHAhntvuAa8t3qosvbU3oLZ5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbb9b373ec337797b9f8822171cb191095cb11e729a4fde4c207d25b8b642fb93",
        "urls": [
          "bzz-raw://6fba7f4448f95e3a42fba5305cc02403eee23aa62e742a0ae7bca609bdaf89da",
          "dweb:/ipfs/QmSXV5FapsVemawU9Zzkx3u3DNLhCaS9MnwcZLsPpMSKnz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xca1b8408f5137ff7f73ade1d303a723a00c83067392d43f343628deb7c98d3b4",
        "urls": [
          "bzz-raw://f5010f14b2d30cdaf813dab357250be63c250b11f79d4f9233887560ddd4d369",
          "dweb:/ipfs/QmetSh6t7179Hv2fXynrKpp5uN9b1uKw8MuYjPKnqiDpUY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x636eab608b4563c01e88042aba9330e6fe69af2c567fe1adf4d85731974ac81d",
        "urls": [
          "bzz-raw://e35967fa779d58a99de2f6d7ac23ef489d09bc18a5668fd231753905e0a9f633",
          "dweb:/ipfs/QmWUSbnhG7z4fDUYMbCuyJ4nyhqKwzL2jbeFEnVLDxo6R6"
        ],
        "license": "MIT"
      },
      "src/Vault/INftVault.sol": {
        "keccak256": "0xf1eb3938eb5c1fd02290505851b50a027293b1f19d325600a615d7952c85bcd3",
        "urls": [
          "bzz-raw://d85a8c8399b139af18f793d4c98a0d8edfc972bfa74e2463bed85ec4693ae954",
          "dweb:/ipfs/QmUnqFKkBQHmTm98hEJu5Z5YJtmZYrEfYja3Yh5dJwCgtQ"
        ],
        "license": "MIT"
      },
      "src/Vault/INftVaultFactory.sol": {
        "keccak256": "0xc763960d1766106cdede3d8733db5f583bd6f2534844f53e108bda9b2f80e412",
        "urls": [
          "bzz-raw://7c33f5dbb7ab5df31b981c847c312edcdc4c1aa40f3d58095fb4acb3f6e26623",
          "dweb:/ipfs/QmRnmgWGTu5bnjV43fo51Yu6yeLPTQvKx1UE7afSnq3D6J"
        ],
        "license": "MIT"
      },
      "src/Vault/NftVault.sol": {
        "keccak256": "0x817556d47270184c2f0976a2ce596fa49930bc0c83025a881e0152f007a2a1ff",
        "urls": [
          "bzz-raw://43380934cc88a8e6a576b9b50d2295952c7b15273ffc5212333e1c774da1e3aa",
          "dweb:/ipfs/QmTYEUe2dw2iLk7CqSFz3KoW6TKAFaFte6F8wvasEXRmfQ"
        ],
        "license": "MIT"
      },
      "src/Vault/NftVaultFactory.sol": {
        "keccak256": "0xc64c027b7640300a8248fb00acfe2ff2de57172b0e192bf75002a01f1205a7b1",
        "urls": [
          "bzz-raw://3ead4740df252e36c9fc96b2b03af8af6bbcdd09fcac93e28cea3a2d0b25044d",
          "dweb:/ipfs/QmegfqxSCCHH6LvS4kKH8hjwS54pTUVyLKwkAEQiDC8wLQ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Vault/NftVaultFactory.sol",
    "id": 64083,
    "exportedSymbols": {
      "Address": [
        28736
      ],
      "Context": [
        28758
      ],
      "Counters": [
        28832
      ],
      "ERC1155Holder": [
        26232
      ],
      "ERC1155Receiver": [
        26266
      ],
      "ERC165": [
        29031
      ],
      "ERC165Checker": [
        29225
      ],
      "ERC20": [
        26853
      ],
      "ERC721Holder": [
        28406
      ],
      "EnumerableMap": [
        31224
      ],
      "EnumerableSet": [
        31837
      ],
      "IERC1155": [
        26056
      ],
      "IERC1155Receiver": [
        26097
      ],
      "IERC165": [
        29237
      ],
      "IERC20": [
        26931
      ],
      "IERC20Metadata": [
        26956
      ],
      "IERC721": [
        28334
      ],
      "IERC721Receiver": [
        28352
      ],
      "INftVault": [
        62470
      ],
      "INftVaultFactory": [
        62614
      ],
      "Math": [
        30102
      ],
      "NftVault": [
        63678
      ],
      "NftVaultFactory": [
        64082
      ],
      "Ownable": [
        24628
      ],
      "Ownable2Step": [
        24711
      ],
      "Strings": [
        29007
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4221:90",
    "nodes": [
      {
        "id": 63680,
        "nodeType": "PragmaDirective",
        "src": "32:25:90",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 63681,
        "nodeType": "ImportDirective",
        "src": "59:78:90",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64083,
        "sourceUnit": 31838,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63682,
        "nodeType": "ImportDirective",
        "src": "138:65:90",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64083,
        "sourceUnit": 28833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63683,
        "nodeType": "ImportDirective",
        "src": "204:64:90",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64083,
        "sourceUnit": 29008,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63684,
        "nodeType": "ImportDirective",
        "src": "270:32:90",
        "nodes": [],
        "absolutePath": "src/Vault/INftVaultFactory.sol",
        "file": "./INftVaultFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64083,
        "sourceUnit": 62615,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 63685,
        "nodeType": "ImportDirective",
        "src": "303:24:90",
        "nodes": [],
        "absolutePath": "src/Vault/NftVault.sol",
        "file": "./NftVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64083,
        "sourceUnit": 63679,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 64082,
        "nodeType": "ContractDefinition",
        "src": "329:3923:90",
        "nodes": [
          {
            "id": 63691,
            "nodeType": "UsingForDirective",
            "src": "380:49:90",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63688,
              "name": "EnumerableSet",
              "nameLocations": [
                "386:13:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31837,
              "src": "386:13:90"
            },
            "typeName": {
              "id": 63690,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63689,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "404:13:90",
                  "418:10:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31550,
                "src": "404:24:90"
              },
              "referencedDeclaration": 31550,
              "src": "404:24:90",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$31550_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 63694,
            "nodeType": "UsingForDirective",
            "src": "434:26:90",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 63692,
              "name": "Strings",
              "nameLocations": [
                "440:7:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29007,
              "src": "440:7:90"
            },
            "typeName": {
              "id": 63693,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 63697,
            "nodeType": "VariableDeclaration",
            "src": "466:39:90",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "499:6:90",
            "scope": 64082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 63696,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63695,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "466:13:90",
                  "480:10:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31550,
                "src": "466:24:90"
              },
              "referencedDeclaration": 31550,
              "src": "466:24:90",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$31550_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 63700,
            "nodeType": "VariableDeclaration",
            "src": "511:51:90",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "permissionedVaults",
            "nameLocation": "544:18:90",
            "scope": 64082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 63699,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 63698,
                "name": "EnumerableSet.AddressSet",
                "nameLocations": [
                  "511:13:90",
                  "525:10:90"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31550,
                "src": "511:24:90"
              },
              "referencedDeclaration": 31550,
              "src": "511:24:90",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$31550_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "private"
          },
          {
            "id": 63705,
            "nodeType": "VariableDeclaration",
            "src": "569:49:90",
            "nodes": [],
            "baseFunctions": [
              62509
            ],
            "constant": false,
            "functionSelector": "74449c60",
            "mutability": "mutable",
            "name": "vaultHashMap",
            "nameLocation": "606:12:90",
            "scope": 64082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
              "typeString": "mapping(bytes32 => contract INftVault)"
            },
            "typeName": {
              "id": 63704,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 63701,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "577:7:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "569:29:90",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
                "typeString": "mapping(bytes32 => contract INftVault)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 63703,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63702,
                  "name": "INftVault",
                  "nameLocations": [
                    "588:9:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62470,
                  "src": "588:9:90"
                },
                "referencedDeclaration": 62470,
                "src": "588:9:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_INftVault_$62470",
                  "typeString": "contract INftVault"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 63710,
            "nodeType": "VariableDeclaration",
            "src": "624:47:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "d126fc19",
            "mutability": "mutable",
            "name": "vaultIdMap",
            "nameLocation": "661:10:90",
            "scope": 64082,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_INftVault_$62470_$_t_uint256_$",
              "typeString": "mapping(contract INftVault => uint256)"
            },
            "typeName": {
              "id": 63709,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 63707,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 63706,
                  "name": "INftVault",
                  "nameLocations": [
                    "632:9:90"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 62470,
                  "src": "632:9:90"
                },
                "referencedDeclaration": 62470,
                "src": "632:9:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_INftVault_$62470",
                  "typeString": "contract INftVault"
                }
              },
              "nodeType": "Mapping",
              "src": "624:29:90",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_INftVault_$62470_$_t_uint256_$",
                "typeString": "mapping(contract INftVault => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 63708,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "645:7:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 63722,
            "nodeType": "FunctionDefinition",
            "src": "715:104:90",
            "nodes": [],
            "body": {
              "id": 63721,
              "nodeType": "Block",
              "src": "780:39:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63717,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63697,
                        "src": "797:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63718,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "804:6:90",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31703,
                      "src": "797:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 63719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "797:15:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 63716,
                  "id": 63720,
                  "nodeType": "Return",
                  "src": "790:22:90"
                }
              ]
            },
            "baseFunctions": [
              62516
            ],
            "documentation": {
              "id": 63711,
              "nodeType": "StructuredDocumentation",
              "src": "678:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "97331bf9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllVaults",
            "nameLocation": "724:12:90",
            "parameters": {
              "id": 63712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:2:90"
            },
            "returnParameters": {
              "id": 63716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63715,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63722,
                  "src": "762:16:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63713,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "762:7:90",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63714,
                    "nodeType": "ArrayTypeName",
                    "src": "762:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "761:18:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63736,
            "nodeType": "FunctionDefinition",
            "src": "862:101:90",
            "nodes": [],
            "body": {
              "id": 63735,
              "nodeType": "Block",
              "src": "926:37:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63732,
                        "name": "_i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63725,
                        "src": "953:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63730,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63697,
                        "src": "943:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63731,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "950:2:90",
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31673,
                      "src": "943:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 63733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:13:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63729,
                  "id": 63734,
                  "nodeType": "Return",
                  "src": "936:20:90"
                }
              ]
            },
            "baseFunctions": [
              62524
            ],
            "documentation": {
              "id": 63723,
              "nodeType": "StructuredDocumentation",
              "src": "825:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "7a98742d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultAt",
            "nameLocation": "871:10:90",
            "parameters": {
              "id": 63726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63725,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "890:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63736,
                  "src": "882:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "881:12:90"
            },
            "returnParameters": {
              "id": 63729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63736,
                  "src": "917:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "916:9:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63747,
            "nodeType": "FunctionDefinition",
            "src": "1006:97:90",
            "nodes": [],
            "body": {
              "id": 63746,
              "nodeType": "Block",
              "src": "1064:39:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63742,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63697,
                        "src": "1081:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63743,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1088:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31646,
                      "src": "1081:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 63744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:15:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 63741,
                  "id": 63745,
                  "nodeType": "Return",
                  "src": "1074:22:90"
                }
              ]
            },
            "baseFunctions": [
              62530
            ],
            "documentation": {
              "id": 63737,
              "nodeType": "StructuredDocumentation",
              "src": "969:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "812617c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVaultLength",
            "nameLocation": "1015:14:90",
            "parameters": {
              "id": 63738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1029:2:90"
            },
            "returnParameters": {
              "id": 63741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63747,
                  "src": "1055:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1055:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1054:9:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63761,
            "nodeType": "FunctionDefinition",
            "src": "1146:109:90",
            "nodes": [],
            "body": {
              "id": 63760,
              "nodeType": "Block",
              "src": "1208:47:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63757,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63750,
                        "src": "1241:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 63755,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63697,
                        "src": "1225:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63756,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1232:8:90",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31631,
                      "src": "1225:15:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 63758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1225:23:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63754,
                  "id": 63759,
                  "nodeType": "Return",
                  "src": "1218:30:90"
                }
              ]
            },
            "baseFunctions": [
              62538
            ],
            "documentation": {
              "id": 63748,
              "nodeType": "StructuredDocumentation",
              "src": "1109:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "652b9b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVault",
            "nameLocation": "1155:7:90",
            "parameters": {
              "id": 63751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63750,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1171:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63761,
                  "src": "1163:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:16:90"
            },
            "returnParameters": {
              "id": 63754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63761,
                  "src": "1202:4:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63752,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1201:6:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63773,
            "nodeType": "FunctionDefinition",
            "src": "1298:128:90",
            "nodes": [],
            "body": {
              "id": 63772,
              "nodeType": "Block",
              "src": "1375:51:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63768,
                        "name": "permissionedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63700,
                        "src": "1392:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63769,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:6:90",
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31703,
                      "src": "1392:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 63770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 63767,
                  "id": 63771,
                  "nodeType": "Return",
                  "src": "1385:34:90"
                }
              ]
            },
            "baseFunctions": [
              62545
            ],
            "documentation": {
              "id": 63762,
              "nodeType": "StructuredDocumentation",
              "src": "1261:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "f853ca3d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllPermissionedVaults",
            "nameLocation": "1307:24:90",
            "parameters": {
              "id": 63763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1331:2:90"
            },
            "returnParameters": {
              "id": 63767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63766,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63773,
                  "src": "1357:16:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63764,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1357:7:90",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 63765,
                    "nodeType": "ArrayTypeName",
                    "src": "1357:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:18:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63787,
            "nodeType": "FunctionDefinition",
            "src": "1469:125:90",
            "nodes": [],
            "body": {
              "id": 63786,
              "nodeType": "Block",
              "src": "1545:49:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63783,
                        "name": "_i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63776,
                        "src": "1584:2:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 63781,
                        "name": "permissionedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63700,
                        "src": "1562:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63782,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1581:2:90",
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31673,
                      "src": "1562:21:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
                      }
                    },
                    "id": 63784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:25:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 63780,
                  "id": 63785,
                  "nodeType": "Return",
                  "src": "1555:32:90"
                }
              ]
            },
            "baseFunctions": [
              62553
            ],
            "documentation": {
              "id": 63774,
              "nodeType": "StructuredDocumentation",
              "src": "1432:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "77f7154b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPermissionedVaultAt",
            "nameLocation": "1478:22:90",
            "parameters": {
              "id": 63777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63776,
                  "mutability": "mutable",
                  "name": "_i",
                  "nameLocation": "1509:2:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63787,
                  "src": "1501:10:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1501:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1500:12:90"
            },
            "returnParameters": {
              "id": 63780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63779,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63787,
                  "src": "1536:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:9:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63798,
            "nodeType": "FunctionDefinition",
            "src": "1637:121:90",
            "nodes": [],
            "body": {
              "id": 63797,
              "nodeType": "Block",
              "src": "1707:51:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 63793,
                        "name": "permissionedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63700,
                        "src": "1724:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63794,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1743:6:90",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31646,
                      "src": "1724:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 63795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:27:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 63792,
                  "id": 63796,
                  "nodeType": "Return",
                  "src": "1717:34:90"
                }
              ]
            },
            "baseFunctions": [
              62559
            ],
            "documentation": {
              "id": 63788,
              "nodeType": "StructuredDocumentation",
              "src": "1600:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "2c1067d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPermissionedVaultLength",
            "nameLocation": "1646:26:90",
            "parameters": {
              "id": 63789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1672:2:90"
            },
            "returnParameters": {
              "id": 63792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63791,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63798,
                  "src": "1698:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1697:9:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63812,
            "nodeType": "FunctionDefinition",
            "src": "1801:133:90",
            "nodes": [],
            "body": {
              "id": 63811,
              "nodeType": "Block",
              "src": "1875:59:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63808,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63801,
                        "src": "1920:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 63806,
                        "name": "permissionedVaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63700,
                        "src": "1892:18:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 63807,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1911:8:90",
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31631,
                      "src": "1892:27:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
                      }
                    },
                    "id": 63809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63805,
                  "id": 63810,
                  "nodeType": "Return",
                  "src": "1885:42:90"
                }
              ]
            },
            "baseFunctions": [
              62567
            ],
            "documentation": {
              "id": 63799,
              "nodeType": "StructuredDocumentation",
              "src": "1764:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "5c870c6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPermissionedVault",
            "nameLocation": "1810:19:90",
            "parameters": {
              "id": 63802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63801,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1838:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63812,
                  "src": "1830:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:16:90"
            },
            "returnParameters": {
              "id": 63805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63804,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63812,
                  "src": "1869:4:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63803,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1869:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1868:6:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 63845,
            "nodeType": "FunctionDefinition",
            "src": "1977:236:90",
            "nodes": [],
            "body": {
              "id": 63844,
              "nodeType": "Block",
              "src": "2081:132:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 63829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63823,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63821,
                      "src": "2091:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 63824,
                        "name": "vaultHashMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63705,
                        "src": "2099:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
                          "typeString": "mapping(bytes32 => contract INftVault)"
                        }
                      },
                      "id": 63828,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 63826,
                            "name": "_collections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63817,
                            "src": "2122:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct INftVault.CollectionData memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct INftVault.CollectionData memory[] memory"
                            }
                          ],
                          "id": 63825,
                          "name": "hashVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63888,
                          "src": "2112:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct INftVault.CollectionData memory[] memory) pure returns (bytes32)"
                          }
                        },
                        "id": 63827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2112:23:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2099:37:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "src": "2091:45:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INftVault_$62470",
                      "typeString": "contract INftVault"
                    }
                  },
                  "id": 63830,
                  "nodeType": "ExpressionStatement",
                  "src": "2091:45:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 63833,
                          "name": "vault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63821,
                          "src": "2158:5:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        ],
                        "id": 63832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2150:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63831,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2150:7:90",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2150:14:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 63837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2176:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 63836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2168:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63835,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2168:7:90",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2168:10:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2150:28:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63843,
                  "nodeType": "IfStatement",
                  "src": "2146:60:90",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63840,
                        "name": "VaultDoesNotExist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62497,
                        "src": "2187:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 63841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2187:19:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 63842,
                    "nodeType": "RevertStatement",
                    "src": "2180:26:90"
                  }
                }
              ]
            },
            "baseFunctions": [
              62578
            ],
            "documentation": {
              "id": 63813,
              "nodeType": "StructuredDocumentation",
              "src": "1940:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "f3964551",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "1986:8:90",
            "parameters": {
              "id": 63818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63817,
                  "mutability": "mutable",
                  "name": "_collections",
                  "nameLocation": "2029:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63845,
                  "src": "1995:46:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INftVault.CollectionData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63815,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63814,
                        "name": "INftVault.CollectionData",
                        "nameLocations": [
                          "1995:9:90",
                          "2005:14:90"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62149,
                        "src": "1995:24:90"
                      },
                      "referencedDeclaration": 62149,
                      "src": "1995:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollectionData_$62149_storage_ptr",
                        "typeString": "struct INftVault.CollectionData"
                      }
                    },
                    "id": 63816,
                    "nodeType": "ArrayTypeName",
                    "src": "1995:26:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_storage_$dyn_storage_ptr",
                      "typeString": "struct INftVault.CollectionData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1994:48:90"
            },
            "returnParameters": {
              "id": 63822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63821,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2074:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63845,
                  "src": "2064:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INftVault_$62470",
                    "typeString": "contract INftVault"
                  },
                  "typeName": {
                    "id": 63820,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63819,
                      "name": "INftVault",
                      "nameLocations": [
                        "2064:9:90"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62470,
                      "src": "2064:9:90"
                    },
                    "referencedDeclaration": 62470,
                    "src": "2064:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INftVault_$62470",
                      "typeString": "contract INftVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2063:17:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63870,
            "nodeType": "FunctionDefinition",
            "src": "2256:175:90",
            "nodes": [],
            "body": {
              "id": 63869,
              "nodeType": "Block",
              "src": "2347:84:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 63867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 63857,
                            "name": "vaultHashMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63705,
                            "src": "2372:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
                              "typeString": "mapping(bytes32 => contract INftVault)"
                            }
                          },
                          "id": 63861,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 63859,
                                "name": "_collections",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63850,
                                "src": "2395:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct INftVault.CollectionData memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct INftVault.CollectionData memory[] memory"
                                }
                              ],
                              "id": 63858,
                              "name": "hashVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63888,
                              "src": "2385:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (struct INftVault.CollectionData memory[] memory) pure returns (bytes32)"
                              }
                            },
                            "id": 63860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2385:23:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2372:37:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        ],
                        "id": 63856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2364:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2364:7:90",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2364:46:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 63865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2422:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 63864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2414:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 63863,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2414:7:90",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 63866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2414:10:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2364:60:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63854,
                  "id": 63868,
                  "nodeType": "Return",
                  "src": "2357:67:90"
                }
              ]
            },
            "baseFunctions": [
              62588
            ],
            "documentation": {
              "id": 63846,
              "nodeType": "StructuredDocumentation",
              "src": "2219:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "f68790c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "2265:6:90",
            "parameters": {
              "id": 63851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63850,
                  "mutability": "mutable",
                  "name": "_collections",
                  "nameLocation": "2306:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63870,
                  "src": "2272:46:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INftVault.CollectionData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63848,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63847,
                        "name": "INftVault.CollectionData",
                        "nameLocations": [
                          "2272:9:90",
                          "2282:14:90"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62149,
                        "src": "2272:24:90"
                      },
                      "referencedDeclaration": 62149,
                      "src": "2272:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollectionData_$62149_storage_ptr",
                        "typeString": "struct INftVault.CollectionData"
                      }
                    },
                    "id": 63849,
                    "nodeType": "ArrayTypeName",
                    "src": "2272:26:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_storage_$dyn_storage_ptr",
                      "typeString": "struct INftVault.CollectionData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:48:90"
            },
            "returnParameters": {
              "id": 63854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63853,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63870,
                  "src": "2341:4:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63852,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2340:6:90"
            },
            "scope": 64082,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 63888,
            "nodeType": "FunctionDefinition",
            "src": "2474:156:90",
            "nodes": [],
            "body": {
              "id": 63887,
              "nodeType": "Block",
              "src": "2571:59:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63883,
                            "name": "_collections",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63875,
                            "src": "2609:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct INftVault.CollectionData memory[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct INftVault.CollectionData memory[] memory"
                            }
                          ],
                          "expression": {
                            "id": 63881,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2598:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 63882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2602:6:90",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2598:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 63884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2598:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 63880,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2588:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 63885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:35:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 63879,
                  "id": 63886,
                  "nodeType": "Return",
                  "src": "2581:42:90"
                }
              ]
            },
            "baseFunctions": [
              62598
            ],
            "documentation": {
              "id": 63871,
              "nodeType": "StructuredDocumentation",
              "src": "2437:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "9ac24687",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashVault",
            "nameLocation": "2483:9:90",
            "parameters": {
              "id": 63876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63875,
                  "mutability": "mutable",
                  "name": "_collections",
                  "nameLocation": "2527:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 63888,
                  "src": "2493:46:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INftVault.CollectionData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63873,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63872,
                        "name": "INftVault.CollectionData",
                        "nameLocations": [
                          "2493:9:90",
                          "2503:14:90"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62149,
                        "src": "2493:24:90"
                      },
                      "referencedDeclaration": 62149,
                      "src": "2493:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollectionData_$62149_storage_ptr",
                        "typeString": "struct INftVault.CollectionData"
                      }
                    },
                    "id": 63874,
                    "nodeType": "ArrayTypeName",
                    "src": "2493:26:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_storage_$dyn_storage_ptr",
                      "typeString": "struct INftVault.CollectionData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2492:48:90"
            },
            "returnParameters": {
              "id": 63879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63888,
                  "src": "2562:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 63877,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2561:9:90"
            },
            "scope": 64082,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64081,
            "nodeType": "FunctionDefinition",
            "src": "2673:1577:90",
            "nodes": [],
            "body": {
              "id": 64080,
              "nodeType": "Block",
              "src": "2842:1408:90",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    63904
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63904,
                      "mutability": "mutable",
                      "name": "isPermissionless",
                      "nameLocation": "2857:16:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 64080,
                      "src": "2852:21:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 63903,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2852:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63914,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 63905,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63895,
                        "src": "2876:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2894:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2886:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2886:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2886:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2876:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 63912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2900:13:90",
                      "subExpression": {
                        "id": 63911,
                        "name": "_isSoulbound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63897,
                        "src": "2901:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2876:37:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2852:61:90"
                },
                {
                  "assignments": [
                    63916
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63916,
                      "mutability": "mutable",
                      "name": "vaultHash",
                      "nameLocation": "2932:9:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 64080,
                      "src": "2924:17:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 63915,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2924:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63920,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 63918,
                        "name": "_collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63893,
                        "src": "2954:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        }
                      ],
                      "id": 63917,
                      "name": "hashVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63888,
                      "src": "2944:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct INftVault.CollectionData memory[] memory) pure returns (bytes32)"
                      }
                    },
                    "id": 63919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2944:23:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2924:43:90"
                },
                {
                  "expression": {
                    "id": 63927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63921,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63901,
                      "src": "2977:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "baseExpression": {
                            "id": 63923,
                            "name": "vaultHashMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63705,
                            "src": "2995:12:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
                              "typeString": "mapping(bytes32 => contract INftVault)"
                            }
                          },
                          "id": 63925,
                          "indexExpression": {
                            "id": 63924,
                            "name": "vaultHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63916,
                            "src": "3008:9:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2995:23:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        ],
                        "id": 63922,
                        "name": "INftVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62470,
                        "src": "2985:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INftVault_$62470_$",
                          "typeString": "type(contract INftVault)"
                        }
                      },
                      "id": 63926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2985:34:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "src": "2977:42:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INftVault_$62470",
                      "typeString": "contract INftVault"
                    }
                  },
                  "id": 63928,
                  "nodeType": "ExpressionStatement",
                  "src": "2977:42:90"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 63939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 63937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 63931,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63901,
                            "src": "3124:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INftVault_$62470",
                              "typeString": "contract INftVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_INftVault_$62470",
                              "typeString": "contract INftVault"
                            }
                          ],
                          "id": 63930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3116:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63929,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3116:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3116:14:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 63935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3142:1:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 63934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3134:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 63933,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3134:7:90",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 63936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3134:10:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3116:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 63938,
                      "name": "isPermissionless",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63904,
                      "src": "3148:16:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3116:48:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 63943,
                  "nodeType": "IfStatement",
                  "src": "3112:83:90",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 63940,
                        "name": "VaultAlreadyDeployed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62500,
                        "src": "3173:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 63941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3173:22:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 63942,
                    "nodeType": "RevertStatement",
                    "src": "3166:29:90"
                  }
                },
                {
                  "assignments": [
                    63945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63945,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "3214:7:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 64080,
                      "src": "3206:15:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3206:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63946,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3206:15:90"
                },
                {
                  "assignments": [
                    63948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63948,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "3245:4:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 64080,
                      "src": "3231:18:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 63947,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3231:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63949,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3231:18:90"
                },
                {
                  "assignments": [
                    63951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63951,
                      "mutability": "mutable",
                      "name": "symbol",
                      "nameLocation": "3273:6:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 64080,
                      "src": "3259:20:90",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 63950,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3259:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 63952,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3259:20:90"
                },
                {
                  "condition": {
                    "id": 63953,
                    "name": "isPermissionless",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63904,
                    "src": "3294:16:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 64011,
                    "nodeType": "Block",
                    "src": "3538:255:90",
                    "statements": [
                      {
                        "expression": {
                          "id": 63987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63983,
                            "name": "vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63945,
                            "src": "3580:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 63984,
                                "name": "permissionedVaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63700,
                                "src": "3590:18:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 63985,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3609:6:90",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31646,
                              "src": "3590:25:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 63986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3590:27:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3580:37:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63988,
                        "nodeType": "ExpressionStatement",
                        "src": "3580:37:90"
                      },
                      {
                        "expression": {
                          "id": 63998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63989,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63948,
                            "src": "3631:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d61676963205065726d697373696f6e6564205661756c7420",
                                "id": 63993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3652:27:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_dcff659b654a70d387d3429a19fe7717b3121dda64dbc2488442d0923a73d284",
                                  "typeString": "literal_string \"Magic Permissioned Vault \""
                                },
                                "value": "Magic Permissioned Vault "
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 63994,
                                    "name": "vaultId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63945,
                                    "src": "3681:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 63995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3689:8:90",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28890,
                                  "src": "3681:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 63996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3681:18:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_dcff659b654a70d387d3429a19fe7717b3121dda64dbc2488442d0923a73d284",
                                  "typeString": "literal_string \"Magic Permissioned Vault \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 63991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3638:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 63990,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3638:6:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3645:6:90",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "3638:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 63997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3638:62:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3631:69:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 63999,
                        "nodeType": "ExpressionStatement",
                        "src": "3631:69:90"
                      },
                      {
                        "expression": {
                          "id": 64009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 64000,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63951,
                            "src": "3714:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d616769635065726d697373696f6e65645661756c74",
                                "id": 64004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3737:24:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_157a82889b915f94dc68733ea49fa73bdeba616a1dc97fc55e8b1ea233d809f8",
                                  "typeString": "literal_string \"MagicPermissionedVault\""
                                },
                                "value": "MagicPermissionedVault"
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 64005,
                                    "name": "vaultId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63945,
                                    "src": "3763:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 64006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3771:8:90",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28890,
                                  "src": "3763:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 64007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3763:18:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_157a82889b915f94dc68733ea49fa73bdeba616a1dc97fc55e8b1ea233d809f8",
                                  "typeString": "literal_string \"MagicPermissionedVault\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 64002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3723:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 64001,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3723:6:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3730:6:90",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "3723:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 64008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3723:59:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3714:68:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 64010,
                        "nodeType": "ExpressionStatement",
                        "src": "3714:68:90"
                      }
                    ]
                  },
                  "id": 64012,
                  "nodeType": "IfStatement",
                  "src": "3290:503:90",
                  "trueBody": {
                    "id": 63982,
                    "nodeType": "Block",
                    "src": "3312:220:90",
                    "statements": [
                      {
                        "expression": {
                          "id": 63958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63954,
                            "name": "vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63945,
                            "src": "3356:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 63955,
                                "name": "vaults",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63697,
                                "src": "3366:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 63956,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3373:6:90",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31646,
                              "src": "3366:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$31550_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
                              }
                            },
                            "id": 63957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3366:15:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:25:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 63959,
                        "nodeType": "ExpressionStatement",
                        "src": "3356:25:90"
                      },
                      {
                        "expression": {
                          "id": 63969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63960,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63948,
                            "src": "3395:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d61676963205661756c7420",
                                "id": 63964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3416:14:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_77ee87147c129899d81d3538d30fc0e8db8570992779fe84677ab77c41181594",
                                  "typeString": "literal_string \"Magic Vault \""
                                },
                                "value": "Magic Vault "
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 63965,
                                    "name": "vaultId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63945,
                                    "src": "3432:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 63966,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3440:8:90",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28890,
                                  "src": "3432:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 63967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3432:18:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_77ee87147c129899d81d3538d30fc0e8db8570992779fe84677ab77c41181594",
                                  "typeString": "literal_string \"Magic Vault \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 63962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3402:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 63961,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3402:6:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3409:6:90",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "3402:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 63968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3402:49:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3395:56:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 63970,
                        "nodeType": "ExpressionStatement",
                        "src": "3395:56:90"
                      },
                      {
                        "expression": {
                          "id": 63980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 63971,
                            "name": "symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63951,
                            "src": "3465:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4d616769635661756c74",
                                "id": 63975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3488:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_3d84f1a7a0ce1f18319f56255121712164b181446c0b413a760dea69273e10fd",
                                  "typeString": "literal_string \"MagicVault\""
                                },
                                "value": "MagicVault"
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 63976,
                                    "name": "vaultId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 63945,
                                    "src": "3502:7:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 63977,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3510:8:90",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 28890,
                                  "src": "3502:16:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 63978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3502:18:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_3d84f1a7a0ce1f18319f56255121712164b181446c0b413a760dea69273e10fd",
                                  "typeString": "literal_string \"MagicVault\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 63973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3474:6:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 63972,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3474:6:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 63974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3481:6:90",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "3474:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 63979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3474:47:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "3465:56:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 63981,
                        "nodeType": "ExpressionStatement",
                        "src": "3465:56:90"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 64027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64013,
                      "name": "vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63901,
                      "src": "3803:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 64020,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63948,
                                  "src": "3842:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 64021,
                                  "name": "symbol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63951,
                                  "src": "3848:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "id": 64022,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63895,
                                  "src": "3856:6:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 64023,
                                  "name": "_isSoulbound",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63897,
                                  "src": "3864:12:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 64019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "3829:12:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$_t_contract$_NftVault_$63678_$",
                                  "typeString": "function (string memory,string memory,address,bool) returns (contract NftVault)"
                                },
                                "typeName": {
                                  "id": 64018,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 64017,
                                    "name": "NftVault",
                                    "nameLocations": [
                                      "3833:8:90"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 63678,
                                    "src": "3833:8:90"
                                  },
                                  "referencedDeclaration": 63678,
                                  "src": "3833:8:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NftVault_$63678",
                                    "typeString": "contract NftVault"
                                  }
                                }
                              },
                              "id": 64024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3829:48:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NftVault_$63678",
                                "typeString": "contract NftVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NftVault_$63678",
                                "typeString": "contract NftVault"
                              }
                            ],
                            "id": 64016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3821:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 64015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3821:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3821:57:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64014,
                        "name": "INftVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62470,
                        "src": "3811:9:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INftVault_$62470_$",
                          "typeString": "type(contract INftVault)"
                        }
                      },
                      "id": 64026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3811:68:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INftVault_$62470",
                        "typeString": "contract INftVault"
                      }
                    },
                    "src": "3803:76:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INftVault_$62470",
                      "typeString": "contract INftVault"
                    }
                  },
                  "id": 64028,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:76:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64032,
                        "name": "_collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63893,
                        "src": "3900:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 64029,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63901,
                        "src": "3889:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INftVault_$62470",
                          "typeString": "contract INftVault"
                        }
                      },
                      "id": 64031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3895:4:90",
                      "memberName": "init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62281,
                      "src": "3889:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct INftVault.CollectionData memory[] memory) external"
                      }
                    },
                    "id": 64033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3889:24:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64034,
                  "nodeType": "ExpressionStatement",
                  "src": "3889:24:90"
                },
                {
                  "condition": {
                    "id": 64035,
                    "name": "isPermissionless",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63904,
                    "src": "3928:16:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 64067,
                    "nodeType": "Block",
                    "src": "4089:63:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 64063,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63901,
                                  "src": "4134:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INftVault_$62470",
                                    "typeString": "contract INftVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_INftVault_$62470",
                                    "typeString": "contract INftVault"
                                  }
                                ],
                                "id": 64062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4126:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 64061,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4126:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4126:14:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 64058,
                              "name": "permissionedVaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63700,
                              "src": "4103:18:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 64060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4122:3:90",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31577,
                            "src": "4103:22:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$31550_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 64065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4103:38:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 64066,
                        "nodeType": "ExpressionStatement",
                        "src": "4103:38:90"
                      }
                    ]
                  },
                  "id": 64068,
                  "nodeType": "IfStatement",
                  "src": "3924:228:90",
                  "trueBody": {
                    "id": 64057,
                    "nodeType": "Block",
                    "src": "3946:137:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 64041,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 63901,
                                  "src": "3979:5:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_INftVault_$62470",
                                    "typeString": "contract INftVault"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_INftVault_$62470",
                                    "typeString": "contract INftVault"
                                  }
                                ],
                                "id": 64040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3971:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 64039,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3971:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 64042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3971:14:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 64036,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63697,
                              "src": "3960:6:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$31550_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 64038,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3967:3:90",
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31577,
                            "src": "3960:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$31550_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$31550_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 64043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3960:26:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 64044,
                        "nodeType": "ExpressionStatement",
                        "src": "3960:26:90"
                      },
                      {
                        "expression": {
                          "id": 64049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 64045,
                              "name": "vaultHashMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63705,
                              "src": "4000:12:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_contract$_INftVault_$62470_$",
                                "typeString": "mapping(bytes32 => contract INftVault)"
                              }
                            },
                            "id": 64047,
                            "indexExpression": {
                              "id": 64046,
                              "name": "vaultHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63916,
                              "src": "4013:9:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4000:23:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INftVault_$62470",
                              "typeString": "contract INftVault"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 64048,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63901,
                            "src": "4026:5:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INftVault_$62470",
                              "typeString": "contract INftVault"
                            }
                          },
                          "src": "4000:31:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INftVault_$62470",
                            "typeString": "contract INftVault"
                          }
                        },
                        "id": 64050,
                        "nodeType": "ExpressionStatement",
                        "src": "4000:31:90"
                      },
                      {
                        "expression": {
                          "id": 64055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 64051,
                              "name": "vaultIdMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63710,
                              "src": "4045:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_INftVault_$62470_$_t_uint256_$",
                                "typeString": "mapping(contract INftVault => uint256)"
                              }
                            },
                            "id": 64053,
                            "indexExpression": {
                              "id": 64052,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63901,
                              "src": "4056:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INftVault_$62470",
                                "typeString": "contract INftVault"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4045:17:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 64054,
                            "name": "vaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63945,
                            "src": "4065:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4045:27:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 64056,
                        "nodeType": "ExpressionStatement",
                        "src": "4045:27:90"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 64070,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63948,
                        "src": "4180:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 64071,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63951,
                        "src": "4186:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 64072,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63901,
                        "src": "4194:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INftVault_$62470",
                          "typeString": "contract INftVault"
                        }
                      },
                      {
                        "id": 64073,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63945,
                        "src": "4201:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 64074,
                        "name": "_collections",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63893,
                        "src": "4210:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 64075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4224:3:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4228:6:90",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4224:10:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64077,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 63895,
                        "src": "4236:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_INftVault_$62470",
                          "typeString": "contract INftVault"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct INftVault.CollectionData memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64069,
                      "name": "VaultCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62494,
                      "src": "4167:12:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_contract$_INftVault_$62470_$_t_uint256_$_t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,contract INftVault,uint256,struct INftVault.CollectionData memory[] memory,address,address)"
                      }
                    },
                    "id": 64078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4167:76:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64079,
                  "nodeType": "EmitStatement",
                  "src": "4162:81:90"
                }
              ]
            },
            "baseFunctions": [
              62613
            ],
            "documentation": {
              "id": 63889,
              "nodeType": "StructuredDocumentation",
              "src": "2636:32:90",
              "text": "@inheritdoc INftVaultFactory"
            },
            "functionSelector": "cf25a9d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createVault",
            "nameLocation": "2682:11:90",
            "parameters": {
              "id": 63898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63893,
                  "mutability": "mutable",
                  "name": "_collections",
                  "nameLocation": "2737:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 64081,
                  "src": "2703:46:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct INftVault.CollectionData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 63891,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 63890,
                        "name": "INftVault.CollectionData",
                        "nameLocations": [
                          "2703:9:90",
                          "2713:14:90"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 62149,
                        "src": "2703:24:90"
                      },
                      "referencedDeclaration": 62149,
                      "src": "2703:24:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollectionData_$62149_storage_ptr",
                        "typeString": "struct INftVault.CollectionData"
                      }
                    },
                    "id": 63892,
                    "nodeType": "ArrayTypeName",
                    "src": "2703:26:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CollectionData_$62149_storage_$dyn_storage_ptr",
                      "typeString": "struct INftVault.CollectionData[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63895,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2767:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 64081,
                  "src": "2759:14:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2759:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63897,
                  "mutability": "mutable",
                  "name": "_isSoulbound",
                  "nameLocation": "2788:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 64081,
                  "src": "2783:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 63896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2783:4:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2693:113:90"
            },
            "returnParameters": {
              "id": 63902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63901,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2835:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 64081,
                  "src": "2825:15:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INftVault_$62470",
                    "typeString": "contract INftVault"
                  },
                  "typeName": {
                    "id": 63900,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 63899,
                      "name": "INftVault",
                      "nameLocations": [
                        "2825:9:90"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 62470,
                      "src": "2825:9:90"
                    },
                    "referencedDeclaration": 62470,
                    "src": "2825:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INftVault_$62470",
                      "typeString": "contract INftVault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2824:17:90"
            },
            "scope": 64082,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 63686,
              "name": "INftVaultFactory",
              "nameLocations": [
                "357:16:90"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 62614,
              "src": "357:16:90"
            },
            "id": 63687,
            "nodeType": "InheritanceSpecifier",
            "src": "357:16:90"
          }
        ],
        "canonicalName": "NftVaultFactory",
        "contractDependencies": [
          63678
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64082,
          62614
        ],
        "name": "NftVaultFactory",
        "nameLocation": "338:15:90",
        "scope": 64083,
        "usedErrors": [
          62497,
          62500
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 90
}